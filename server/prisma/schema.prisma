// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Alumni {
  id                     Int       @id @default(autoincrement())
  fullName               String
  currentName            String?   // optional
  dateOfBirth            DateTime? // optional
  email                  String    @unique
  phoneNumber            String    @unique
  password               String?
  address                String?   // optional free-text address
  linkedinProfile        String?   // optional URL
  socialMediaWebsite     String?   // optional URL

  // Professional Information
  currentJobTitle        String?   // Current job title
  currentCompany         String?   // Current company
  workExperience         String?   // Work experience details
  skills                 String?   // Skills (comma-separated)
  achievements           String?   // Notable achievements
  
  // Additional Information
  bio                    String?   // Personal bio
  interests              String?   // Interests and hobbies
  mentorshipAvailable    Boolean   @default(false) // Available for mentoring
  lookingForMentor       Boolean   @default(false) // Looking for a mentor
  
  // Location Information
  currentCity            String?   // Current city
  currentCountry         String?   // Current country

  // Legacy/compat fields
  yearOfJoining          Int
  passingYear            Int
  admissionInFirstYear   Boolean   @default(true)
  department             String
  college                String
  course                 String

  // Optional explicit enrollment "to" year if you want it separate from passingYear
  enrollmentToYear       Int?      // optional; remove if you don't plan to store it separately

  isVerified             Boolean   @default(false)
  createdAt              DateTime  @default(now())
  updatedAt              DateTime  @updatedAt
  otps                   OTP[]
}

model OTP {
  id        Int      @id @default(autoincrement())
  code      String
  type      String   // 'EMAIL' or 'PHONE'
  expiresAt DateTime
  isUsed    Boolean  @default(false)
  alumniId  Int
  alumni    Alumni   @relation(fields: [alumniId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}